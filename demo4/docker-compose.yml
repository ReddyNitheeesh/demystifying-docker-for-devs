version: '3.4'

services:
  redis:
    container_name: redis
    image: redis:latest
    restart: on-failure
    networks:
      - main
    ports:
      - "6379:6379"

  app:
    build:
      context: ../demo2/flask_api/
      dockerfile: Dockerfile
    image: flask_service
    container_name: flask_app
    environment: # environment variables inside the compose file
      - HIGHER_ENV_ENABLED=FALSE
      - VAULT_ENABLE=FALSE
    env_file: .env # use of .env file
    depends_on:
      - redis
      - celery_service
    ports:
      - "4001:5001"
    hostname: app
    networks:
      - main
    volumes: # bind mount inplace of user defined volumes
      - ./:/var/local/
    restart: on-failure

  celery_service:
    build:
      context: ../demo2/taskqueue/
      dockerfile: Dockerfile
    image: celery_service
    volumes:
      - ./:/var/local/
    container_name: celery_app
    depends_on:
      - redis
    hostname: celery
    networks:
      - main
    deploy: # docker stack use of deploy key
      replicas: 2
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
        reservations:
          cpus: '0.25'
          memory: 25M
networks:
  main: